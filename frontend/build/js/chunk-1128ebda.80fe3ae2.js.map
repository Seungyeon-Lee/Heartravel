{"version":3,"sources":["webpack:///./src/api/delivery.js","webpack:///./src/api/payment.js","webpack:///./src/pages_admin/AdminOrderPayList.vue?64e8","webpack:///src/pages_admin/AdminOrderPayList.vue","webpack:///./src/pages_admin/AdminOrderPayList.vue?9631","webpack:///./src/pages_admin/AdminOrderPayList.vue"],"names":["getDeliveryData","id","params","axios","method","url","data","getOrderDataDelivery","updateReceiverInfoDelivery","updateOrderDataDelivery","updateDeliveryInformation","getPaymentData","getOrderDataPayment","updateOrderDataPayment","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","items","fields","perPage","$options","paginationProps","scopedSlots","_u","key","fn","ref","item","on","$event","rowClicked","_s","order_id","numberWithCommas","tot_price","getBadge","payment_status","getDate","registered","model","value","callback","$$v","$set","expression","updateStatus","delivery_id","delivery_company","invoice_num","order_description","proxy","staticRenderFns","delivery","company","invoice","status_index","component"],"mappings":"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","file":"js/chunk-1128ebda.80fe3ae2.js","sourcesContent":["import axios from 'axios';\r\n\r\n//=============================================================================+\r\n// 특정 주문 배송 조회\r\n//=============================================================================+\r\nexport function getDeliveryData(id, params) {\r\n    return axios({\r\n        method:\"get\"\r\n        ,url: ('/api/deliveries/'+id)\r\n        ,data: params\r\n    });\r\n}\r\n//=============================================================================+\r\n// 1. 배송준비 2. 배송중 3. 배송완료 4. 구매확정\r\n//=============================================================================+\r\nexport function getOrderDataDelivery(id, params) {\r\n    return axios({\r\n        method:\"get\"\r\n        ,url: ('/api/deliveries/status/'+id)\r\n        ,data: params\r\n    });\r\n}\r\n//=============================================================================+\r\n// 주문 정보 변경 (받는 사람 정보)\r\n//=============================================================================+\r\nexport function updateReceiverInfoDelivery(id, params) {\r\n    return axios({\r\n        method:\"put\"\r\n        ,url: ('/api/deliveries/'+id)\r\n        ,data: params\r\n    });\r\n}\r\n//=============================================================================+\r\n// 배송 상태 변경\r\n//=============================================================================+\r\nexport function updateOrderDataDelivery(id, params) {\r\n    return axios({\r\n        method:\"put\"\r\n        ,url: ('/api/deliveries/'+id+'/status')\r\n        ,data: params\r\n    });\r\n}\r\n\r\n//=============================================================================+\r\n// 배송회사, 송장번호, 배송중 상태 변경\r\n//=============================================================================+\r\nexport function updateDeliveryInformation(id, params) {\r\n    return axios({\r\n        method:\"put\"\r\n        ,url: ('/api/deliveries/'+id+'/invoice_n_company')\r\n        ,data: params\r\n    });\r\n}","import axios from 'axios';\r\n\r\n//=============================================================================+\r\n// 특정 주문 결제 조회\r\n//=============================================================================+\r\nexport function getPaymentData(id, params) {\r\n    return axios({\r\n        method:\"get\"\r\n        ,url: ('/api/payments/'+id)\r\n        ,data: params\r\n    });\r\n}\r\n//=============================================================================+\r\n// 1. 결제대기 2. 결제완료 3. 환불대기 4. 환불완료\r\n//=============================================================================+\r\nexport function getOrderDataPayment(id, params) {\r\n    return axios({\r\n        method:\"get\"\r\n        ,url: ('/api/payments/status/'+id)\r\n        ,data: params\r\n    });\r\n}\r\n//=============================================================================+\r\n// 결제 상태 변경\r\n//=============================================================================+\r\nexport function updateOrderDataPayment(id, params) {\r\n    return axios({\r\n        method:\"put\"\r\n        ,url: ('/api/payments/'+id+'/status')\r\n        ,data: params\r\n    });\r\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('CCard',[_c('CCardHeader',[_c('strong',[_vm._v(\"결제 완료 리스트\")])]),_c('CCardBody',[_c('CDataTable',{attrs:{\"items\":_vm.items,\"fields\":_vm.fields,\"items-per-page\":_vm.perPage,\"hover\":\"\",\"sorter\":\"\",\"table-filter\":\"\",\"pagination\":_vm.$options.paginationProps,\"index-column\":\"\"},scopedSlots:_vm._u([{key:\"order_id\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('td',[_c('CLink',{on:{\"click\":function($event){return _vm.rowClicked(item)}}},[_vm._v(\" \"+_vm._s(item.order_id)+\" \")])],1)]}},{key:\"amount\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('td',[_vm._v(\" \"+_vm._s(_vm.numberWithCommas(item.tot_price))+\" \")])]}},{key:\"payment_status\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('td',[_c('CBadge',{attrs:{\"color\":_vm.getBadge(item.payment_status)}},[_vm._v(\" \"+_vm._s(item.payment_status === 1 ? '결제대기' : item.payment_status === 2 ? '결제완료' : item.payment_status === 3 ? '주문취소' : '환불완료')+\" \")])],1)]}},{key:\"registered\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('td',[_vm._v(\" \"+_vm._s(_vm.getDate(item.registered))+\" \")])]}},{key:\"show_details\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('td',[_c('CInput',{attrs:{\"placeholder\":\"배송회사 입력\",\"size\":\"sm\",\"type\":\"text\",\"autocomplete\":\"off\"},model:{value:(item.delivery_company),callback:function ($$v) {_vm.$set(item, \"delivery_company\", $$v)},expression:\"item.delivery_company\"}}),_c('CInput',{attrs:{\"placeholder\":\"송장번호 입력\",\"size\":\"sm\",\"type\":\"text\",\"autocomplete\":\"off\"},scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('CButton',{staticClass:\"btn btn-light\",attrs:{\"size\":\"sm\"},on:{\"click\":function($event){return _vm.updateStatus(item.delivery_id, item.delivery_company, item.invoice_num, item.order_description)}}},[_vm._v(\"배송중\")])]},proxy:true}],null,true),model:{value:(item.invoice_num),callback:function ($$v) {_vm.$set(item, \"invoice_num\", $$v)},expression:\"item.invoice_num\"}})],1)]}}])})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"app-container\">\r\n        <CCard>\r\n            <CCardHeader>\r\n                <strong>결제 완료 리스트</strong>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n                <CDataTable\r\n                        :items=\"items\"\r\n                        :fields=\"fields\"\r\n                        :items-per-page=\"perPage\"\r\n                        hover\r\n                        sorter\r\n                        table-filter\r\n                        :pagination=\"$options.paginationProps\"\r\n                        index-column\r\n                >\r\n                    <template #order_id=\"{item}\">\r\n                        <td>\r\n                            <CLink @click=\"rowClicked(item)\">\r\n                                {{item.order_id}}\r\n                            </CLink>\r\n                        </td>\r\n                    </template>\r\n                    <template #amount=\"{item}\">\r\n                        <td>\r\n                            {{numberWithCommas(item.tot_price)}}\r\n                        </td>\r\n                    </template>\r\n                    <template #payment_status=\"{item}\">\r\n                        <td>\r\n                            <CBadge :color=\"getBadge(item.payment_status)\">\r\n                                {{item.payment_status === 1 ? '결제대기' :\r\n                                item.payment_status === 2 ? '결제완료' :\r\n                                item.payment_status === 3 ? '주문취소' : '환불완료'}}\r\n                            </CBadge>\r\n                        </td>\r\n                    </template>\r\n                    <template #registered=\"{item}\">\r\n                        <td>\r\n                            {{getDate(item.registered)}}\r\n                        </td>\r\n                    </template>\r\n                    <template #show_details=\"{item}\">\r\n                        <td>\r\n                            <CInput placeholder=\"배송회사 입력\" size=\"sm\"\r\n                                    type=\"text\" v-model=\"item.delivery_company\" autocomplete=\"off\"/>\r\n                            <CInput placeholder=\"송장번호 입력\" size=\"sm\"\r\n                                    type=\"text\" v-model=\"item.invoice_num\" autocomplete=\"off\">\r\n                                <template #append>\r\n                                    <CButton class=\"btn btn-light\" size=\"sm\" @click=\"updateStatus(item.delivery_id, item.delivery_company, item.invoice_num, item.order_description)\">배송중</CButton>\r\n                                </template>\r\n                            </CInput>\r\n                        </td>\r\n                    </template>\r\n                </CDataTable>\r\n            </CCardBody>\r\n        </CCard>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import * as PAYMENT_API from \"../api/payment\";\r\n    import * as DELIVERY_API from \"../api/delivery\";\r\n    import * as ORDER_API from \"../api/orders\";\r\n    export default {\r\n        name: 'AdminOrderList',\r\n        data() {\r\n            return {\r\n                items: [],\r\n                fields: [\r\n                    {key: 'order_id', label: '주문번호', sorter: false},\r\n                    {key: 'user_id', label: '아이디'},\r\n                    {key: 'user_name', label: '이름'},\r\n                    {key: 'order_description', label: '주문내역', sorter: false},\r\n                    {key: 'registered', label: '주문일자'},\r\n                    {key: 'amount', label: '가격', sorter: false},\r\n                    {key: 'payment_status', label: '상태', sorter: false},\r\n                    {\r\n                        key: 'show_details',\r\n                        label: '',\r\n                        sorter: false\r\n                    }\r\n                ],\r\n                delivery : {\r\n                    delivery_id : '',\r\n                    delivery_company : '',\r\n                    invoice_num : '',\r\n                    status_index : '',\r\n                },\r\n                order : [],\r\n                details: [],\r\n                perPage: 10,\r\n            }\r\n        },\r\n        paginationProps: {\r\n            align: 'center',\r\n            doubleArrows: true,\r\n            previousButtonHtml: 'prev',\r\n            nextButtonHtml: 'next'\r\n        },\r\n        mounted() {\r\n            this.getOrderData();\r\n        },\r\n        methods: {\r\n            refreshPage() {\r\n                this.$router.go(0)\r\n            },\r\n            getBadge(status) {\r\n                return status === 1 ? 'secondary'\r\n                    : status === 2 ? 'success'\r\n                        : status === 3 ? 'danger' : 'primary'\r\n            },\r\n            orderLink(id) {\r\n                return `/admin/orders/${id.toString()}`\r\n            },\r\n            rowClicked(item) {\r\n                const orderLink = this.orderLink(item.order_id);\r\n                this.$router.push({path: orderLink})\r\n            },\r\n            getOrderData: async function () {\r\n                try {\r\n                    let rs = await PAYMENT_API.getOrderDataPayment(2,{idx : 2});\r\n                    this.items = rs.data.result;//.sort((a, b) => a.index - b.index)\r\n                } catch (err) {\r\n                    // console.error(err)\r\n                }\r\n            },\r\n            getDate(date) {\r\n                let ts = new Date(date);\r\n                return ts.toLocaleString();\r\n            },\r\n            numberWithCommas(x) {\r\n                if(x) return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,  \",\");\r\n            },\r\n            updateStatus: async function (id, company, invoice, name) {\r\n                this.delivery.delivery_company = company;\r\n                this.delivery.invoice_num = invoice;\r\n                this.delivery.status_index = 2;\r\n\r\n                if (confirm(name + \"의 배송 상태를 '배송중'으로 변경하시겠습니까?\")) {\r\n                    try {\r\n                        const rs = await DELIVERY_API.updateDeliveryInformation(id, {delivery: this.delivery});\r\n                        if (rs.data.code === \"success\") {\r\n                            alert(\"변경되었습니다\");\r\n                            this.refreshPage();\r\n                        }\r\n                    } catch (err) {\r\n                        // console.error(err)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AdminOrderPayList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AdminOrderPayList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AdminOrderPayList.vue?vue&type=template&id=29c12746&scoped=true&\"\nimport script from \"./AdminOrderPayList.vue?vue&type=script&lang=js&\"\nexport * from \"./AdminOrderPayList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"29c12746\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}